View(E..albiflora)
View(data)
View(data)
library(pacman)
pacman::p_load(readxl)
# Read all lists in file
file_path <- "E:/Eranthis/Eranthis_morph.xlsx"
all_sheets <- excel_sheets(file_path)
for (sheet_name in all_sheets) {
var_name <- make.names(sheet_name)
assign(var_name, read_excel(file_path, sheet = sheet_name))
}
View(E..albiflora)
View(E..tanhoensis)
View(E..albiflora)
View(E..krasnoborovii)
library(pacman)
pacman::p_load(readxl)
# Read all lists in file
file_path <- "E:/Eranthis/Eranthis_morph.xlsx"
all_sheets <- excel_sheets(file_path)
for (sheet_name in all_sheets) {
var_name <- make.names(sheet_name)
assign(var_name, read_excel(file_path, sheet = sheet_name))
}
pacman::p_load(readxl, rgif)
# START -----------------------------------------------------------------------------------------------------------
Sys.setenv(LANG = "en_US.UTF-8")
#Library
library(pacman)
pacman::p_load(
lubridate,
purrr,
dplyr,
tidyr,
forecast,
zoo,
rlang,
ggplot2,
tidyverse,
raster,
sp,
geodata,
terra,
rasterVis,
BiocManager,
devtools,
dismo,
XML,
jsonlite,
rgdal,
rJava,
readxl
)
dir.create("E:/Eranthis/maps")
bioclim <- getData(name="worldclim", download=TRUE, path = "E:/Eranthis/maps", res= 2.5, var="bio")
pacman::p_load(
lubridate,
purrr,
dplyr,
tidyr,
forecast,
zoo,
rlang,
ggplot2,
tidyverse,
raster,
sp,
geodata,
terra,
rasterVis,
BiocManager,
devtools,
dismo,
XML,
jsonlite,
rgdal,
rJava,
readxl,
rgbif
)
#Spatial Point from GBIF
dir.create("E:/Eranthis/gbif")
species_list <- read.csv("PLANT_LIST.csv")$species
species_list <- read.csv("PLANT_LIST.csv")$species
species_list <- read_xls("PLANT_LIST.xlsx")$species
species_list <- read_xls("PLANT_LIST.xls")$species
species_list <- read_xlsx("PLANT_LIST.xlsx")$species
list()
file_list <- list.files("E:/Eranthis/gbif")
species_list <- read_xlsx("PLANT_LIST.xlsx")$species
species_list <- read_xlsx("E:/Eranthis/gbif/PLANT_LIST.xlsx")$species
# Create an empty list to store occurrence data
occ_data_list <- list()
# Loop through each species and retrieve occurrence data
for (species_name in species_list) {
print(paste("Retrieving data for:", species_name))
# Retrieve occurrence data for the current species
current_occ_data <- gbif(genus = "Tulipa", species = species_name, ext = NULL, args = NULL,
geo = TRUE, sp = TRUE, removeZeros = FALSE, download = TRUE)
# Store the occurrence data in the list
occ_data_list[[species_name]] <- current_occ_data
}
# Loop through each species and retrieve occurrence data
for (species_name in species_list) {
print(paste("Retrieving data for:", species_name))
# Retrieve occurrence data for the current species
current_occ_data <- gbif(genus = "Eranthis", species = species_name, ext = NULL, args = NULL,
geo = TRUE, sp = TRUE, removeZeros = FALSE, download = TRUE)
# Store the occurrence data in the list
occ_data_list[[species_name]] <- current_occ_data
}
# Установка необходимых пакетов, если они еще не установлены
if (!requireNamespace("leaflet", quietly = TRUE)) {
install.packages("leaflet")
}
if (!requireNamespace("rgbif", quietly = TRUE)) {
install.packages("rgbif")
}
# Загрузка библиотек
library(leaflet)
library(rgbif)
# Путь к папке, где будут сохранены карты
output_folder <- "E:/Eranthis/gbif/maps"
dir.create(output_folder, showWarnings = FALSE)
# Функция для получения данных GBIF для указанного вида
get_gbif_data <- function(genus, species) {
gbif_data <- gbif(genus = genus, species = species, geo = TRUE)
return(gbif_data)
}
# Цикл по каждому виду и создание карты
for (species_name in species_list) {
print(paste("Retrieving data for:", species_name))
# Получение данных GBIF
gbif_data <- get_gbif_data(genus = "Eranthis", species = species_name)
# Создание карты с точками
map <- leaflet(data = gbif_data) %>%
addTiles() %>%
addMarkers(
lng = ~decimalLongitude,
lat = ~decimalLatitude,
popup = ~paste("Genus: Eranthis", "<br>Species: ", species_name)
)
# Сохранение карты в файл
map_file_path <- file.path(output_folder, paste0("map_", gsub(" ", "_", species_name), ".html"))
saveWidget(map, map_file_path, selfcontained = TRUE)
print(paste("Map saved for:", species_name))
}
# Путь к папке, где будут сохранены карты
output_folder <- "E:/Eranthis/gbif/maps"
dir.create(output_folder, showWarnings = FALSE)
# Функция для получения данных GBIF для указанного вида
get_gbif_data <- function(genus, species) {
gbif_data <- gbif(genus = genus, species = species, geo = TRUE)
return(gbif_data)
}
# Цикл по каждому виду и создание карты
for (species_name in species_list) {
print(paste("Retrieving data for:", species_name))
# Получение данных GBIF
gbif_data <- get_gbif_data(genus = "Eranthis", species = species_name)
# Проверка наличия столбцов latitude и longitude
if ("latitude" %in% colnames(gbif_data) && "longitude" %in% colnames(gbif_data)) {
# Создание карты с точками
map <- leaflet(data = gbif_data) %>%
addTiles() %>%
addMarkers(
lng = ~longitude,
lat = ~latitude,
popup = ~paste("Genus: Eranthis", "<br>Species: ", species_name)
)
# Сохранение карты в файл
map_file_path <- file.path(output_folder, paste0("map_", gsub(" ", "_", species_name), ".html"))
saveWidget(map, map_file_path, selfcontained = TRUE)
print(paste("Map saved for:", species_name))
} else {
print(paste("Error: latitude or longitude column not found for species", species_name))
}
}
# START -----------------------------------------------------------------------------------------------------------
Sys.setenv(LANG = "en_US.UTF-8")
#Library
library(pacman)
pacman::p_load(xlsx)
fenolic <- read.table(file = "fenolic", sep = "\t", header=TRUE)
setwd("E:/Eranthis")
fenolic <- read.table(file = "fenolic", sep = "\t", header=TRUE)
fenolic <- read.table(file = "fenolic")
fenolic <- read.table(file = "fenolic.xlsx")
View(fenolic)
fenolic <- read_excel(file = "fenolic.xlsx")
pacman::p_load(readxl)
setwd("E:/Eranthis")
fenolic <- read_excel(file = "fenolic.xlsx")
fenolic <- read_excel("fenolic.xlsx")
View(fenolic)
pacman::p_load(readxl, ggplot2)
# START -----------------------------------------------------------------------------------------------------------
Sys.setenv(LANG = "en_US.UTF-8")
#Library
library(pacman)
pacman::p_load(
lubridate,
purrr,
dplyr,
tidyr,
forecast,
zoo,
rlang,
ggplot2,
tidyverse,
raster,
sp,
geodata,
terra,
rasterVis,
BiocManager,
devtools,
dismo,
XML,
jsonlite,
rgdal,
rJava
)
levelplot(cropped_rasters[[1]])
View(E..sineli)
View(fenolic)
ggplot(fenolic) +
geom_bar( aes(x=name, y=value), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=name, ymin=value-sd, ymax=value+sd), width=0.4, colour="orange", alpha=0.9, size=1.3)
# START -----------------------------------------------------------------------------------------------------------
Sys.setenv(LANG = "en_US.UTF-8")
#Library
library(pacman)
pacman::p_load(readxl, ggplot2)
setwd("E:/Eranthis")
fenolic <- read_excel("fenolic.xlsx")
ggplot(fenolic) +
geom_bar( aes(x=name, y=value), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=name, ymin=value-sd, ymax=value+sd), width=0.4, colour="orange", alpha=0.9, size=1.3)
View(fenolic)
data <- data.frame(
name=letters[1:5],
value=sample(seq(4,15),5),
sd=c(1,0.2,3,2,4)
)
View(data)
#Library
library(pacman)
pacman::p_load(readxl, ggplot2)
setwd("E:/Eranthis")
fenolic <- read_excel("fenolic.xlsx")
ggplot(fenolic) +
geom_bar( aes(x=name, y=leaves), stat="identity", fill="skyblue", alpha=0.7)
ggplot(fenolic, aes(x = name)) +
geom_bar(aes(y = leaves, fill = "Leaves"), stat = "identity", position = "dodge") +
geom_bar(aes(y = flowers, fill = "Flowers"), stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("Leaves" = "green", "Flowers" = "red")) +
theme_minimal()
#Library
library(pacman)
pacman::p_load(readxl, ggplot2)
setwd("E:/Eranthis")
fenolic <- read_excel("fenolic.xlsx")
ggplot(fenolic, aes(x = name)) +
geom_bar(aes(y = leaves, fill = "Leaves"), stat = "identity", position = "dodge") +
geom_bar(aes(y = flowers, fill = "Flowers"), stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("Leaves" = "green", "Flowers" = "red")) +
theme_minimal()
ggplot(fenolic, aes(x = name)) +
geom_bar(aes(y = leaves, fill = "Leaves"), stat = "identity", position = "dodge") +
geom_bar(aes(y = Flowers, fill = "Flowers"), stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("Leaves" = "green", "Flowers" = "red")) +
theme_minimal()
ggplot(fenolic, aes(x = name)) +
geom_bar(aes(y = leaves, fill = "Leaves"), stat = "identity", position = "dodge") +
geom_bar(aes(y = Flowers, fill = "Flowers"), stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("Leaves" = "green", "Flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(fenolic, aes(x = name)) +
geom_bar(aes(y = leaves, fill = "Leaves"), stat = "identity", position = "dodge") +
geom_bar(aes(y = flowers, fill = "Flowers"), stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("Leaves" = "green", "Flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(fenolic, aes(x = name)) +
geom_bar(aes(y = leaves, fill = "Leaves"), stat = "identity", position = "dodge") +
geom_bar(aes(y = Flowers, fill = "Flowers"), stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("Leaves" = "green", "Flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(fenolic, aes(x = name)) +
geom_bar(aes(y = leaves, fill = "Leaves"), stat = "identity", position = "dodge") +
geom_bar(aes(y = Flowers, fill = "Flowers"), stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("Leaves" = "green", "Flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
fenolic$leaves <- as.numeric(as.character(fenolic$leaves))
fenolic$flowers <- as.numeric(as.character(fenolic$flowers))
# Представление данных в длинном формате
fenolic_long <- tidyr::gather(fenolic, key = "variable", value = "value", -name)
fenolic$leaves <- as.numeric(as.character(fenolic$leaves))
fenolic$flowers <- as.numeric(as.character(fenolic$Flowers))
# Представление данных в длинном формате
fenolic_long <- tidyr::gather(fenolic, key = "variable", value = "value", -name)
# Создание графика с соседними столбцами
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Создание графика с соседними столбцами
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(aes(fill = variable), stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Удаление дубликатов
fenolic <- fenolic[!duplicated(fenolic), ]
# Представление данных в длинном формате
fenolic_long <- tidyr::gather(fenolic, key = "variable", value = "value", -name)
# Создание графика с соседними столбцами
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
fenolic <- read_excel("fenolic.xlsx")
fenolic$leaves <- as.numeric(as.character(fenolic$leaves))
fenolic$flowers <- as.numeric(as.character(fenolic$Flowers))
fenolic <- read_excel("fenolic.xlsx")
fenolic$leaves <- as.numeric(as.character(fenolic$leaves))
fenolic$Flowers <- as.numeric(as.character(fenolic$Flowers))
# Представление данных в длинном формате
fenolic_long <- tidyr::gather(fenolic, key = "variable", value = "value", -name)
# Создание графика с соседними столбцами
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Создание графика с соседними столбцами
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "Flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Создание графика с соседними столбцами
ggplot(fenolic_long, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "Flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
fenolic <- read_excel("fenolic.xlsx")
fenolic$leaves <- as.numeric(as.character(fenolic$leaves))
fenolic$flowers <- as.numeric(as.character(fenolic$flowers))
# Представление данных в длинном формате
fenolic_long <- tidyr::gather(fenolic, key = "variable", value = "value", -name)
# Создание графика с разделением по оси x
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_grid(. ~ variable, scales = "free_x", space = "free_x")
# Создание графика с разделением по оси x
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_grid(. ~ variable, scales = "free_x", space = "free_x") +
scale_y_continuous(labels = comma)
pacman::p_load(readxl, ggplot2, scales)
# Создание графика с разделением по оси x
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_grid(. ~ variable, scales = "free_x", space = "free_x") +
scale_y_continuous(labels = comma)
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_grid(. ~ variable, scales = "free_x", space = "free_x") +
scale_y_continuous(labels = comma)
ggplot(fenolic, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_grid(. ~ variable, scales = "free_x", space = "free_x") +
scale_y_continuous(labels = comma)
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma)
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma, breaks = seq(0, max(fenolic_long$value), by = 1000))
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma, breaks = seq(0, max(fenolic_long$value), by = 100000))
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma, breaks = seq(0, max(fenolic_long$value), by = 200000))
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma, breaks = seq(0, max(fenolic_long$value), by = 1000000))
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma, breaks = seq(0, max(fenolic_long$value), by = 10000000))
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma, breaks = seq(0, max(fenolic_long$value), by = 100000000))
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma, breaks = seq(0, max(fenolic_long$value), by = 50000000))
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma, breaks = seq(0, max(fenolic_long$value), by = 50000000))
ggplot(fenolic_long, aes(x = name, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Count") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = comma, breaks = seq(0, max(fenolic_long$value), by = 50000000))
# Создание графика в виде ящика с усами
ggplot(fenolic_long, aes(x = variable, y = value, fill = variable)) +
geom_boxplot() +
labs(title = "Leaves and Flowers Comparison", x = "Variable", y = "Value") +
scale_fill_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Создание точечной диаграммы
ggplot(fenolic_long, aes(x = variable, y = value, color = variable)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
labs(title = "Leaves and Flowers Comparison", x = "Variable", y = "Value") +
scale_color_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Создание линейного графика
ggplot(fenolic_long, aes(x = name, y = value, color = variable, group = variable)) +
geom_line() +
labs(title = "Leaves and Flowers Comparison", x = "Name", y = "Value") +
scale_color_manual(values = c("leaves" = "green", "flowers" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
