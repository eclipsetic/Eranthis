combined_data <- combined_data %>%
group_by(Species) %>%
summarize(across(everything(), ~ mean(., na.rm = TRUE)))
# Create a distance matrix
dist_matrix <- dist(combined_data)
# Perform hierarchical clustering
hc <- hclust(dist_matrix, method = "ward.D2")
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 5, labels = combined_data$Species)
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 0.8, labels = combined_data$Species)
# Read all lists in file
file_path <- "E:/Eranthis/Eranthis_morph.xlsx"
all_sheets <- excel_sheets(file_path)
for (sheet_name in all_sheets) {
var_name <- make.names(sheet_name)
assign(var_name, read_excel(file_path, sheet = sheet_name))
}
all_dataframes <- list("E.sibirica", "E.tanhoensis", "E.sibirica_x_E.tanhoensis", "E.krasnoborovii", "E.sineli",
"E.stellata", "E.stellata.Korea.", "E.pinnatifida", "E.pungdoensis", "E.albiflora",
"E.lobulata", "E.byunsanensis")
#Making One table
tables <- lapply(all_dataframes, get)
tables <- lapply(tables, as.data.frame)
tables <- lapply(tables, function(tbl) mutate_all(tbl, as.character))
combined_data <- bind_rows(tables)
write.xlsx(combined_data, "combined_data.xlsx", rowNames = FALSE)
combined_data <- read.xlsx("combined_data.xlsx")
combined_data <- combined_data %>%
mutate_at(vars(2:45), as.numeric)
print(cor(combined_data), digits = 2)
# Выбираем только числовые столбцы
numeric_columns <- combined_data %>%
select_if(is.numeric)
# Вычисляем корреляцию
correlation_matrix <- cor(numeric_columns)
# Выводим матрицу корреляции
print(correlation_matrix, digits = 2)
# START -----------------------------------------------------------------------------------------------------------
Sys.setenv(LANG = "en_US.UTF-8")
#Library
library(pacman)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, caret, mice, missForest, knitr
)
# Read all lists in file
file_path <- "E:/Eranthis/White_E.xlsx"
White <- read_xlsx("White_E.xlsx")
# Create a distance matrix
dist_matrix <- dist(White)
# Perform hierarchical clustering
hc <- hclust(dist_matrix, method = "ward.D2")
# Perform hierarchical clustering
hc <- hclust(dist_matrix, method = "ward.D")
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 0.8, labels = White$Number)
White$Num_SP <- paste(White$Number, White$Species, sep = "_")
View(White)
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 0.8, labels = White$Num_SP)
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 1, labels = White$Num_SP)
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 0.8, labels = White$Num_SP)
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 1, labels = White$Num_SP)
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 1, labels = White$Num_SP)
# START -----------------------------------------------------------------------------------------------------------
Sys.setenv(LANG = "en_US.UTF-8")
#Library
library(pacman)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr
)
# Read all lists in file
file_path <- "E:/Eranthis/Eranthis_morph.xlsx"
all_sheets <- excel_sheets(file_path)
for (sheet_name in all_sheets) {
var_name <- make.names(sheet_name)
assign(var_name, read_excel(file_path, sheet = sheet_name))
}
all_dataframes <- list("E.sibirica", "E.tanhoensis", "E.sibirica_x_E.tanhoensis", "E.krasnoborovii", "E.sineli",
"E.stellata", "E.stellata.Korea.", "E.pinnatifida", "E.pungdoensis", "E.albiflora",
"E.lobulata", "E.byunsanensis")
#Making One table
tables <- lapply(all_dataframes, get)
tables <- lapply(tables, as.data.frame)
tables <- lapply(tables, function(tbl) mutate_all(tbl, as.character))
combined_data <- bind_rows(tables)
write.xlsx(combined_data, "combined_data.xlsx", rowNames = FALSE)
combined_data <- read.xlsx("combined_data.xlsx")
View(combined_data)
# START -----------------------------------------------------------------------------------------------------------
Sys.setenv(LANG = "en_US.UTF-8")
#Library
library(pacman)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, caret, mice, missForest, knitr
)
# Read all lists in file
file_path <- "E:/Eranthis/White_E.xlsx"
White <- read_xlsx("White_E.xlsx")
White$Num_SP <- paste(White$Number, White$Species, sep = "_")
# Create a distance matrix
dist_matrix <- dist(White)
# Perform hierarchical clustering
hc <- hclust(dist_matrix, method = "complete")
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 1, labels = White$Num_SP)
# Perform hierarchical clustering
hc <- hclust(dist_matrix, method = "single")
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 1, labels = White$Num_SP)
# Perform hierarchical clustering
hc <- hclust(dist_matrix, method = "average")
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 1, labels = White$Num_SP)
# Perform hierarchical clustering
hc <- hclust(dist_matrix, method = "mcquitty")
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 1, labels = White$Num_SP)
# Perform hierarchical clustering
hc <- hclust(dist_matrix, method = "median")
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 1, labels = White$Num_SP)
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 1.2, labels = White$Num_SP)
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 0.8, labels = White$Num_SP)
# Perform hierarchical clustering
hc <- hclust(dist_matrix, method = "centroid")
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 1, labels = White$Num_SP)
# START -----------------------------------------------------------------------------------------------------------
Sys.setenv(LANG = "en_US.UTF-8")
#Library
library(pacman)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, caret, mice, missForest, knitr
)
# Read all lists in file
file_path <- "E:/Eranthis/White_E.xlsx"
White <- read_xlsx("White_E.xlsx")
White$Num_SP <- paste(White$Number, White$Species, sep = "_")
View(White)
# START -----------------------------------------------------------------------------------------------------------
Sys.setenv(LANG = "en_US.UTF-8")
#Library
library(pacman)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr
)
# Read all lists in file
file_path <- "E:/Eranthis/Eranthis_morph.xlsx"
all_sheets <- excel_sheets(file_path)
for (sheet_name in all_sheets) {
var_name <- make.names(sheet_name)
assign(var_name, read_excel(file_path, sheet = sheet_name))
}
all_dataframes <- list("E.sibirica", "E.tanhoensis", "E.sibirica_x_E.tanhoensis", "E.krasnoborovii", "E.sineli",
"E.stellata", "E.stellata.Korea.", "E.pinnatifida", "E.pungdoensis", "E.albiflora",
"E.lobulata", "E.byunsanensis")
tables
tables
tables
#Making One table
tables <- lapply(all_dataframes, get)
tables <- lapply(tables, as.data.frame)
tables <- lapply(tables, function(tbl) mutate_all(tbl, as.character))
combined_data <- bind_rows(tables)
write.xlsx(combined_data, "combined_data.xlsx", rowNames = FALSE)
View(combined_data)
combined_data <- read.xlsx("combined_data.xlsx")
pca_result <- prcomp(combined_data, scale. = TRUE)
pca_result <- prcomp(combined_data, scale. = TRUE, na.rm = TRUE)
pca_result <- prcomp(combined_data, scale. = TRUE, na.action = TRUE)
pca_result <- prcomp(combined_data, scale. = TRUE, na.action)
combined_data <- combined_data %>%
mutate_at(vars(2:45), as.numeric)
pca_result <- prcomp(combined_data, scale. = TRUE)
combined_data_factorized <- lapply(combined_data, function(x) {
if(is.character(x)) {
as.factor(x)
} else {
x
}
})
combined_data_factorized <- as.data.frame(combined_data_factorized)
pca_result <- prcomp(combined_data_factorized, scale. = TRUE)
combined_data_clean <- na.omit(combined_data_factorized)
View(combined_data_clean)
pca_result <- prcomp(combined_data_factorized, scale. = TRUE, na.fail)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, FactoMineR
)
View(combined_data)
PCA(combined_data, scale.unit = TRUE, ncp = 3, graph = TRUE)
library(installr)
updateR()
# START -----------------------------------------------------------------------------------------------------------
Sys.setenv(LANG = "en_US.UTF-8")
#Library
library(pacman)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, FactoMineR
)
PCA(combined_data, scale.unit = TRUE, ncp = 3, graph = TRUE)
res.pca <- PCA(combined_data, scale.unit = TRUE, ncp = 3, graph = TRUE)
library(FactoMineR)
install.packages("FactoMineR", lib="C:/Users/xxxxx/OneDrive/Documents/R/win-library/3.6/00LOCK")
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, FactoMineR
)
View(combined_data)
res.pca <- PCA(combined_data, scale.unit = TRUE, ncp = 3, graph = TRUE)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, FactoMineR
)
library(FactoMineR)
install.packages("FactoMineR", lib="C:/Users/Lisa/AppData/Local/R/win-library/4.3/00LOCK")
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, FactoMineR
)
install.packages("FactoMineR", lib = "C:\Users\Lisa\AppData\Local\R\win-library\4.3")
install.packages("FactoMineR", lib = "C:/Users/Lisa/AppData/Local/R/win-library/4.3")
install.packages("FactoMineR", lib = "C:/Users/Lisa/AppData/Local/R/win-library/4.3")
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, FactoMineR
)
library(FactoMineR)
library(FactoMineR, lib = "C:/Users/Lisa/AppData/Local/R/win-library/4.3")
library(FactoMineR, lib.loc = "C:/Users/Lisa/AppData/Local/R/win-library/4.3")
install.packages("FactoMineR")
library(FactoMineR)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, htmltools
)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, htmltools
)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, htmltools
)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, htmltools
)
View(combined_data)
model <- lm(Species ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr, data = data)
#Empty Global Enviroment
rm(list = ls())
# Read all lists in file
file_path <- "E:/Eranthis/Eranthis_morph.xlsx"
all_sheets <- excel_sheets(file_path)
for (sheet_name in all_sheets) {
var_name <- make.names(sheet_name)
assign(var_name, read_excel(file_path, sheet = sheet_name))
}
# START -----------------------------------------------------------------------------------------------------------
Sys.setenv(LANG = "en_US.UTF-8")
#Library
library(pacman)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, htmltools,
FactoMineR, missMDA, pcaMethods
)
#Empty Global Enviroment
rm(list = ls())
# Read all lists in file
file_path <- "E:/Eranthis/Eranthis_morph.xlsx"
all_sheets <- excel_sheets(file_path)
for (sheet_name in all_sheets) {
var_name <- make.names(sheet_name)
assign(var_name, read_excel(file_path, sheet = sheet_name))
}
all_dataframes <- list("E.sibirica", "E.tanhoensis", "E.sibirica_x_E.tanhoensis", "E.krasnoborovii", "E.sineli",
"E.stellata", "E.stellata.Korea.", "E.pinnatifida", "E.pungdoensis", "E.albiflora",
"E.lobulata", "E.byunsanensis")
#Making One table
tables <- lapply(all_dataframes, get)
tables <- lapply(tables, as.data.frame)
tables <- lapply(tables, function(tbl) mutate_all(tbl, as.character))
combined_data <- bind_rows(tables)
combined_data <- combined_data[-c(103:107), -c(1,3,48) ]
# MLR -------------------------------------------------------------------------------------------------------------
combined_data <- combined_data %>%
mutate_at(vars(2:45), ~as.numeric(.))
model <- lm(Species ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr, data = data)
model <- lm(Species ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr, combined_data = combined_data)
View(combined_data)
head(combined_data)
model <- lm(Species ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr, combined_data = combined_data)
model <- lm("Species" ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr, combined_data = combined_data)
model <- lm('Species' ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr, combined_data = combined_data)
lm <- lm(Species ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr)
combined_data$Species <- factor(combined_data$Species, levels = unique(combined_data$Species))
View(combined_data)
# MLR -------------------------------------------------------------------------------------------------------------
combined_data <- combined_data %>%
mutate_at(vars(2:45), ~as.numeric(.))
lm <- lm(Species ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr)
combined_data$Species <- as.numeric(factor(combined_data$Species))
View(combined_data)
# MLR -------------------------------------------------------------------------------------------------------------
combined_data <- combined_data %>%
mutate_at(vars(2:45), ~as.numeric(.))
lm <- lm(Species ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, htmltools,
FactoMineR, missMDA, pcaMethods, caret
)
View(combined_data)
formula <- as.formula(paste("Species ~", paste(colnames(combined_data)[!colnames(combined_data) %in% "Species"], collapse = "+")))
model <- lm(Species ~ . - Species, data = combined_data)
View(combined_data)
model_fr <- combined_data[ , c(1,3,5,7,9,11,13,15,17,19,21,23)]
View(model_fr)
model_fr <- combined_data[ , c(1,3,5,7,9,13,15,17,19,21,23)]
model_fr <- model_fr[!is.na(model_fr$Species), ]
View(model_fr)
model_fr <- na.omit(model_fr)
View(model_fr)
model <- lm(Species ~ . - Species, data = model_fr)
hist(residuals(model), col = "steelblue")
plot(fitted(model), residuals(model))
#Making One table
tables <- lapply(all_dataframes, get)
tables <- lapply(tables, as.data.frame)
tables <- lapply(tables, function(tbl) mutate_all(tbl, as.character))
combined_data <- bind_rows(tables)
combined_data <- combined_data[-c(103:107), -c(1,3,48) ]
# MLR -------------------------------------------------------------------------------------------------------------
combined_data <- combined_data %>%
mutate_at(vars(2:45), ~as.numeric(.))
model_fr <- combined_data[ , c(1,3,5,7,9,13,15,17,19,21,23)]
model_fr <- na.omit(model_fr)
# Create a distance matrix
dist_matrix <- dist(model_fr)
View(model_fr)
# Perform hierarchical clustering
hc <- hclust(dist_matrix, method = "ward.D2")
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 0.8, labels = combined_data$Species)
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 0.8, labels = model_fr$Species)
res.pca <- PCA(model_fr, graph = FALSE)
# PCA -------------------------------------------------------------------------------------------------------------
model_fr <- model_fr[ , -1]
res.pca <- PCA(model_fr, graph = FALSE)
print(summary(res.pca))
fviz(res.pca,
"var")
fviz_pca_scatter(data.pca, geom = "point", habillage = "Species") +
ggtitle("Scatter plot PCA")
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, htmltools,
FactoMineR, missMDA, pcaMethods, caret
)
fviz_pca_scatter(data.pca, geom = "point", habillage = "Species") +
ggtitle("Scatter plot PCA")
fviz_pca_scatter(res.pca, geom = "point", habillage = "Species") +
ggtitle("Scatter plot PCA")
fviz_pca(res.pca, geom = "point", habillage = "Species") +
ggtitle("Scatter plot PCA")
summary(res.pca)
summary(model)
View(model_fr)
model_fr <- combined_data[ , c(1,3,5,7,9,13,15,17,19,21,23)]
# PCA -------------------------------------------------------------------------------------------------------------
transposed_model_fr <- transpose(model_fr)
View(transposed_model_fr)
# PCA -------------------------------------------------------------------------------------------------------------
transposed_model_fr <- t(model_fr)
View(transposed_model_fr)
colnames(transposed_model_fr) <- as.character(transposed_model_fr[1, ])
transposed_model_fr <- transposed_model_fr[-1, ]
View(transposed_model_fr)
model_fr <- transposed_model_fr[-1, ]
View(transposed_model_fr)
model_fr <- combined_data[ , c(1,3,5,7,9,13,15,17,19,21,23)]
model_fr <- na.omit(model_fr)
# PCA -------------------------------------------------------------------------------------------------------------
model_fr <- t(model_fr)
colnames(model_fr) <- as.character(model_fr[1, ])
model_fr <- model_fr[-1, ]
res.pca <- PCA(model_fr, graph = FALSE)
View(model_fr)
model_fr <- as.data.frame(model_fr)
View(model_fr)
res.pca <- PCA(model_fr, graph = FALSE)
model_fr <- as.numeric(model_fr)
model_fr <- lapply(model_fr, as.numeric)
model_fr <- as.data.frame(model_fr)
res.pca <- PCA(model_fr, graph = FALSE)
print(summary(res.pca))
fviz_pca(res.pca, geom = "point", habillage = "Species") +
ggtitle("Scatter plot PCA")
str(res.pca)
model_fr <- combined_data[ , c(1,3,5,7,9,13,15,17,19,21,23)]
res.pca <- PCA(model_fr, graph = FALSE)
model_fr <- na.omit(model_fr)
res.pca <- PCA(model_fr, graph = FALSE)
model_fr <- model_fr[,-1 ]
res.pca <- PCA(model_fr, graph = FALSE)
print(summary(res.pca))
fviz_pca(res.pca, geom = "point", habillage = "Species") +
ggtitle("Scatter plot PCA")
fviz(res.pca, "ind")
fviz(res.pca, "var")
fviz(res.pca, "var", mean.point = TRUE)
model_fr <- combined_data[ , c(1,3,5,7,9,13,15,17,19,21,23)]
res.pca <- PCA(model_fr[,2:11 ], graph = FALSE)
model_fr <- na.omit(model_fr)
model_fr <- combined_data[ , c(1,3,5,7,9,13,15,17,19,21,23)]
View(model_fr)
model_fr <- na.omit(model_fr)
res.pca <- PCA(model_fr[,2:11], graph = FALSE)
print(summary(res.pca))
fviz(res.pca, "var", mean.point = TRUE)
fviz(res.pca, "var", habillage = Species)
View(model_fr)
fviz(res.pca, "var", habillage = model_fr$Species)
combined_data$Species <- factor(combined_data$Species, levels = unique(combined_data$Species))
combined_data$Species <- as.numeric(factor(combined_data$Species))
res.pca <- PCA(model_fr, graph = FALSE)
print(summary(res.pca))
fviz(res.pca, "var", habillage = model_fr$Species)
View(model_fr)
model_fr$Species <- factor(model_fr$Species, levels = unique(model_fr$Species))
model_fr$Species <- as.numeric(factor(model_fr$Species))
res.pca <- PCA(model_fr, graph = FALSE)
print(summary(res.pca))
fviz(res.pca, "var", habillage = model_fr$Species)
View(model_fr)
fviz(res.pca, "var")
res.pca <- PCA(model_fr[2:11], graph = FALSE)
print(summary(res.pca))
fviz(res.pca, "var", habillage = model_fr[,1])
res.pca <- PCA(model_fr[2:11], graph = FALSE)
print(summary(res.pca))
fviz(res.pca, "var", habillage = model_fr[,1])
fviz(res.pca, "var")
fviz(res.pca, "var", habillage = model_fr[, 1])
model_fr$Species <- as.factor(model_fr[, 1])
fviz(res.pca, "var", habillage = model_fr[, 1])
View(model_fr)
# START -----------------------------------------------------------------------------------------------------------
Sys.setenv(LANG = "en_US.UTF-8")
#Library
library(pacman)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, htmltools,
FactoMineR, missMDA, pcaMethods, caret
)
#Empty Global Enviroment
rm(list = ls())
# Read all lists in file
file_path <- "E:/Eranthis/Eranthis_morph.xlsx"
all_sheets <- excel_sheets(file_path)
for (sheet_name in all_sheets) {
var_name <- make.names(sheet_name)
assign(var_name, read_excel(file_path, sheet = sheet_name))
}
all_dataframes <- list("E.sibirica", "E.tanhoensis", "E.sibirica_x_E.tanhoensis", "E.krasnoborovii", "E.sineli",
"E.stellata", "E.stellata.Korea.", "E.pinnatifida", "E.pungdoensis", "E.albiflora",
"E.lobulata", "E.byunsanensis")
tables <- lapply(seq_along(all_dataframes), function(i) {
df <- get(all_dataframes[[i]])  # Получение датафрейма
df <- mutate(df, Species = i)  # Замена значения в столбце 'Species'
df
})
combined_data <- bind_rows(tables)
View(tables)
tables[[1]]
tables[[2]]
View(tables)
combined_data <- bind_rows(tables)
tables <- lapply(seq_along(all_dataframes), function(i) {
df <- get(all_dataframes[[i]])  # Получение датафрейма
df <- mutate(df, Species = as.character(df$Species))  # Преобразование к строковому типу данных
df
})
combined_data <- bind_rows(tables)
df <- get(all_dataframes[[i]])
