"E.lobulata", "E.byunsanensis")
#Making One table
tables <- lapply(all_dataframes, get)
tables <- lapply(tables, as.data.frame)
tables <- lapply(tables, function(tbl) mutate_all(tbl, as.character))
combined_data <- bind_rows(tables)
combined_data <- combined_data[-c(103:107), -c(1,3,48) ]
# MLR -------------------------------------------------------------------------------------------------------------
combined_data <- combined_data %>%
mutate_at(vars(2:45), ~as.numeric(.))
model <- lm(Species ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr, data = data)
model <- lm(Species ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr, combined_data = combined_data)
View(combined_data)
head(combined_data)
model <- lm(Species ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr, combined_data = combined_data)
model <- lm("Species" ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr, combined_data = combined_data)
model <- lm('Species' ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr, combined_data = combined_data)
lm <- lm(Species ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr)
combined_data$Species <- factor(combined_data$Species, levels = unique(combined_data$Species))
View(combined_data)
# MLR -------------------------------------------------------------------------------------------------------------
combined_data <- combined_data %>%
mutate_at(vars(2:45), ~as.numeric(.))
lm <- lm(Species ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr)
combined_data$Species <- as.numeric(factor(combined_data$Species))
View(combined_data)
# MLR -------------------------------------------------------------------------------------------------------------
combined_data <- combined_data %>%
mutate_at(vars(2:45), ~as.numeric(.))
lm <- lm(Species ~ PHfl + PHfr + BLSLfl + BLSLfr + BLSWfl + BLSWfr + BLSDfl + BLSDfr
+BSLNfl + BSLNfr + BSTNfl + BSTNfr)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, htmltools,
FactoMineR, missMDA, pcaMethods, caret
)
View(combined_data)
formula <- as.formula(paste("Species ~", paste(colnames(combined_data)[!colnames(combined_data) %in% "Species"], collapse = "+")))
model <- lm(Species ~ . - Species, data = combined_data)
View(combined_data)
model_fr <- combined_data[ , c(1,3,5,7,9,11,13,15,17,19,21,23)]
View(model_fr)
model_fr <- combined_data[ , c(1,3,5,7,9,13,15,17,19,21,23)]
model_fr <- model_fr[!is.na(model_fr$Species), ]
View(model_fr)
model_fr <- na.omit(model_fr)
View(model_fr)
model <- lm(Species ~ . - Species, data = model_fr)
hist(residuals(model), col = "steelblue")
plot(fitted(model), residuals(model))
#Making One table
tables <- lapply(all_dataframes, get)
tables <- lapply(tables, as.data.frame)
tables <- lapply(tables, function(tbl) mutate_all(tbl, as.character))
combined_data <- bind_rows(tables)
combined_data <- combined_data[-c(103:107), -c(1,3,48) ]
# MLR -------------------------------------------------------------------------------------------------------------
combined_data <- combined_data %>%
mutate_at(vars(2:45), ~as.numeric(.))
model_fr <- combined_data[ , c(1,3,5,7,9,13,15,17,19,21,23)]
model_fr <- na.omit(model_fr)
# Create a distance matrix
dist_matrix <- dist(model_fr)
View(model_fr)
# Perform hierarchical clustering
hc <- hclust(dist_matrix, method = "ward.D2")
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 0.8, labels = combined_data$Species)
# Plot the dendrogram
plot(hc, main = "Hierarchical Clustering Dendrogram", sub = NULL, xlab = NULL, cex = 0.8, labels = model_fr$Species)
res.pca <- PCA(model_fr, graph = FALSE)
# PCA -------------------------------------------------------------------------------------------------------------
model_fr <- model_fr[ , -1]
res.pca <- PCA(model_fr, graph = FALSE)
print(summary(res.pca))
fviz(res.pca,
"var")
fviz_pca_scatter(data.pca, geom = "point", habillage = "Species") +
ggtitle("Scatter plot PCA")
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, htmltools,
FactoMineR, missMDA, pcaMethods, caret
)
fviz_pca_scatter(data.pca, geom = "point", habillage = "Species") +
ggtitle("Scatter plot PCA")
fviz_pca_scatter(res.pca, geom = "point", habillage = "Species") +
ggtitle("Scatter plot PCA")
fviz_pca(res.pca, geom = "point", habillage = "Species") +
ggtitle("Scatter plot PCA")
summary(res.pca)
summary(model)
View(model_fr)
model_fr <- combined_data[ , c(1,3,5,7,9,13,15,17,19,21,23)]
# PCA -------------------------------------------------------------------------------------------------------------
transposed_model_fr <- transpose(model_fr)
View(transposed_model_fr)
# PCA -------------------------------------------------------------------------------------------------------------
transposed_model_fr <- t(model_fr)
View(transposed_model_fr)
colnames(transposed_model_fr) <- as.character(transposed_model_fr[1, ])
transposed_model_fr <- transposed_model_fr[-1, ]
View(transposed_model_fr)
model_fr <- transposed_model_fr[-1, ]
View(transposed_model_fr)
model_fr <- combined_data[ , c(1,3,5,7,9,13,15,17,19,21,23)]
model_fr <- na.omit(model_fr)
# PCA -------------------------------------------------------------------------------------------------------------
model_fr <- t(model_fr)
colnames(model_fr) <- as.character(model_fr[1, ])
model_fr <- model_fr[-1, ]
res.pca <- PCA(model_fr, graph = FALSE)
View(model_fr)
model_fr <- as.data.frame(model_fr)
View(model_fr)
res.pca <- PCA(model_fr, graph = FALSE)
model_fr <- as.numeric(model_fr)
model_fr <- lapply(model_fr, as.numeric)
model_fr <- as.data.frame(model_fr)
res.pca <- PCA(model_fr, graph = FALSE)
print(summary(res.pca))
fviz_pca(res.pca, geom = "point", habillage = "Species") +
ggtitle("Scatter plot PCA")
str(res.pca)
model_fr <- combined_data[ , c(1,3,5,7,9,13,15,17,19,21,23)]
res.pca <- PCA(model_fr, graph = FALSE)
model_fr <- na.omit(model_fr)
res.pca <- PCA(model_fr, graph = FALSE)
model_fr <- model_fr[,-1 ]
res.pca <- PCA(model_fr, graph = FALSE)
print(summary(res.pca))
fviz_pca(res.pca, geom = "point", habillage = "Species") +
ggtitle("Scatter plot PCA")
fviz(res.pca, "ind")
fviz(res.pca, "var")
fviz(res.pca, "var", mean.point = TRUE)
model_fr <- combined_data[ , c(1,3,5,7,9,13,15,17,19,21,23)]
res.pca <- PCA(model_fr[,2:11 ], graph = FALSE)
model_fr <- na.omit(model_fr)
model_fr <- combined_data[ , c(1,3,5,7,9,13,15,17,19,21,23)]
View(model_fr)
model_fr <- na.omit(model_fr)
res.pca <- PCA(model_fr[,2:11], graph = FALSE)
print(summary(res.pca))
fviz(res.pca, "var", mean.point = TRUE)
fviz(res.pca, "var", habillage = Species)
View(model_fr)
fviz(res.pca, "var", habillage = model_fr$Species)
combined_data$Species <- factor(combined_data$Species, levels = unique(combined_data$Species))
combined_data$Species <- as.numeric(factor(combined_data$Species))
res.pca <- PCA(model_fr, graph = FALSE)
print(summary(res.pca))
fviz(res.pca, "var", habillage = model_fr$Species)
View(model_fr)
model_fr$Species <- factor(model_fr$Species, levels = unique(model_fr$Species))
model_fr$Species <- as.numeric(factor(model_fr$Species))
res.pca <- PCA(model_fr, graph = FALSE)
print(summary(res.pca))
fviz(res.pca, "var", habillage = model_fr$Species)
View(model_fr)
fviz(res.pca, "var")
res.pca <- PCA(model_fr[2:11], graph = FALSE)
print(summary(res.pca))
fviz(res.pca, "var", habillage = model_fr[,1])
res.pca <- PCA(model_fr[2:11], graph = FALSE)
print(summary(res.pca))
fviz(res.pca, "var", habillage = model_fr[,1])
fviz(res.pca, "var")
fviz(res.pca, "var", habillage = model_fr[, 1])
model_fr$Species <- as.factor(model_fr[, 1])
fviz(res.pca, "var", habillage = model_fr[, 1])
View(model_fr)
# START -----------------------------------------------------------------------------------------------------------
Sys.setenv(LANG = "en_US.UTF-8")
#Library
library(pacman)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, htmltools,
FactoMineR, missMDA, pcaMethods, caret
)
#Empty Global Enviroment
rm(list = ls())
# Read all lists in file
file_path <- "E:/Eranthis/Eranthis_morph.xlsx"
all_sheets <- excel_sheets(file_path)
for (sheet_name in all_sheets) {
var_name <- make.names(sheet_name)
assign(var_name, read_excel(file_path, sheet = sheet_name))
}
all_dataframes <- list("E.sibirica", "E.tanhoensis", "E.sibirica_x_E.tanhoensis", "E.krasnoborovii", "E.sineli",
"E.stellata", "E.stellata.Korea.", "E.pinnatifida", "E.pungdoensis", "E.albiflora",
"E.lobulata", "E.byunsanensis")
tables <- lapply(seq_along(all_dataframes), function(i) {
df <- get(all_dataframes[[i]])  # Получение датафрейма
df <- mutate(df, Species = i)  # Замена значения в столбце 'Species'
df
})
combined_data <- bind_rows(tables)
View(tables)
tables[[1]]
tables[[2]]
View(tables)
combined_data <- bind_rows(tables)
tables <- lapply(seq_along(all_dataframes), function(i) {
df <- get(all_dataframes[[i]])  # Получение датафрейма
df <- mutate(df, Species = as.character(df$Species))  # Преобразование к строковому типу данных
df
})
combined_data <- bind_rows(tables)
df <- get(all_dataframes[[i]])
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", col.ind = "black",
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, stroke = 2,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE, point = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
# START -----------------------------------------------------------------------------------------------------------
Sys.setenv(LANG = "en_US.UTF-8")
#Library
library(pacman)
pacman::p_load(lubridate, purrr, dplyr, tidyr, forecast, zoo, rlang, ggplot2, tidyverse, raster,
sp, geodata, terra, rasterVis, BiocManager, dismo, XML, jsonlite, rgdal, rJava,
readxl, rgbif, factoextra, NbClust, cluster, openxlsx, caret, mice, missForest, knitr, htmltools,
FactoMineR, missMDA, pcaMethods, caret, ggfortify, gridExtra, hrbrthemes, corrplot
)
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", col.ind = "black",
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, stroke = 2,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE, point = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
#Empty Global Enviroment
rm(list = ls())
# Read all lists in file
file_path <- "E:/Eranthis/Eranthis_morph.xlsx"
all_sheets <- excel_sheets(file_path)
for (sheet_name in all_sheets) {
var_name <- make.names(sheet_name)
assign(var_name, read_excel(file_path, sheet = sheet_name))
}
all_dataframes <- list("E.sibirica", "E.tanhoensis", "E.sibirica_x_E.tanhoensis", "E.krasnoborovii", "E.sineli",
"E.stellata", "E.stellata.Korea.", "E.pinnatifida", "E.pungdoensis", "E.albiflora",
"E.lobulata", "E.byunsanensis")
#Making One table
tables <- lapply(all_dataframes, get)
tables <- lapply(tables, as.data.frame)
tables <- lapply(tables, function(tbl) mutate_all(tbl, as.character))
tables <- lapply(seq_along(all_dataframes), function(i) {
df <- get(all_dataframes[[i]])
df <- as.data.frame(mutate_all(df, as.character))
df <- df[complete.cases(df$Species), ]
df$Species <- all_dataframes[[i]]  # Здесь изменено
return(df)
})
combined_data <- bind_rows(tables)
combined_data <- combined_data[, -c(1,3,48) ]
# MLR -------------------------------------------------------------------------------------------------------------
combined_data <- combined_data %>%
mutate_at(vars(2:45), ~as.numeric(.))
model_fr <- combined_data[ , c(1,3,5,7,9,13,15,17,19,21,23)]
model_fr <- na.omit(model_fr)
# Plotting --------------------------------------------------------------------------------------------------------
target_species <- c('E.sibirica', 'E.tanhoensis', 'E.sibirica_x_E.tanhoensis')
filtered_data <- model_fr[model_fr$Species %in% target_species, ]
res.pca <- PCA(filtered_data, quali.sup = 1, graph = FALSE, ncp = 2)
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", col.ind = "black",
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, stroke = 2,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE, point = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", col.ind = "black",
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, stroke = 2, stroke = "black",
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE, point = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", col.ind = "black",
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, stroke = 2, stroke = "black",
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", col.ind = "black",
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, stroke = 2, stroke = "black",
mean.point = FALSE, ellipse.alpha = 0, repel = TRUEr3, pallete = "rickandmorthy") +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", col.ind = "black",
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, stroke = 2, stroke = "black",
mean.point = FALSE, ellipse.alpha = 0, repel = TRUEr, pallete = "rickandmorthy") +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", col.ind = "black",
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, stroke = 2, stroke = "black",
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE, pallete = "rickandmorthy") +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", col.ind = "black",
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, stroke = 2, stroke = "black",
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE, pallete = "rickandmorthy") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", col.ind = "black",
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, stroke = 2, stroke = "black",
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", col.ind = "black",
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, linewidth = 0.5,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", col.ind = "black",
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, linewidth = 1,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", stroke = 2,
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, linewidth = 1,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", stroke = 2,
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, alpha = .5,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", stroke = 2,
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, color = 'blue',
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", stroke = 2,
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, colour = 'blue',
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", stroke = 2,
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, colour = 'blue',
fill = "black",
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", stroke = 2,
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, colour = 'blue',
ind.var = "black",
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", stroke = 2,
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, colour = 'blue',
ind.var = "black", shape = 21,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", stroke = 2,
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, colour = NA,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
res.pca <- PCA(filtered_data, quali.sup = 1, graph = FALSE, ncp = 2)
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", stroke = 2,
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", stroke = NA,
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", stroke = NA,
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, colour = "#00abff",
fill = NA,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", stroke = NA,
addEllipses = TRUE, pointsize = 2.8, ellipse.level = 0.95, colour = "#00abff",
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black", stroke = 2,
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95, colour = "black",
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95, colour = "black",
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE, col.ind = "blue") +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95, colour = "black",
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE, col.ind = "blue") +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_colour_manual(palette = "Set1", colour = "black") +
theme_minimal()
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_colour_manual(palette = "Set1", colour = "black") +
theme_minimal()
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_colour_manual(colour = "black") +
theme_minimal()
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_colour_manual(aesthetics = c("colour", "fill")) +
theme_minimal()
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_colour_manual(palette = "Set1", aesthetics = c("colour", "fill")) +
theme_minimal()
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_colour_manual(values = c("red", "blue", "green"), aesthetics = c("colour", "fill")) +
theme_minimal()
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_colour_manual(values = cols, aesthetics = c("colour", "fill")) +
theme_minimal()
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95, colour = NA
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95, colour = NA
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95, colour = NA,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()+
geom_point(data = as.data.frame(res.pca$ind$coord) +
aes(x = Dim.1, y = Dim.2, shape = res.pca$Species, fill = res.pca$Species),
color = "black", size = 2, stroke = 2)
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95, colour = NA,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal() +
geom_point(data = as.data.frame(res.pca$ind$coord),
aes(x = Dim.1, y = Dim.2, shape = res.pca$Species, fill = res.pca$Species),
color = "black", size = 2, stroke = 2)
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95, colour = NA,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal() +
geom_point(data = as.data.frame(res.pca$ind$coord),
aes(x = Dim.1, y = Dim.2, shape = c(21,22,24), fill = res.pca$Species),
color = "black", size = 2, stroke = 2)
as.data.frame(res.pca)
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95, colour = NA,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
# Plotting --------------------------------------------------------------------------------------------------------
target_species <- c('E.sineli', 'E.stellata', 'E.koreana')
filtered_data <- model_fr[model_fr$Species %in% target_species, ]
res.pca <- PCA(filtered_data, quali.sup = 1, graph = FALSE, ncp = 2)
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
# Plotting --------------------------------------------------------------------------------------------------------
target_species <- c('E.pinnatifida', 'E.byunsanensis', 'E.pungdoensis')
filtered_data <- model_fr[model_fr$Species %in% target_species, ]
res.pca <- PCA(filtered_data, quali.sup = 1, graph = FALSE, ncp = 2)
fviz_pca_ind(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
filtered_data <- model_fr[model_fr$Species %in% target_species, ]
res.pca <- PCA(filtered_data, quali.sup = 1, graph = FALSE, ncp = 2)
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
fviz_pca_biplot(res.pca, label = "var", habillage = 1, col.var = "black",
addEllipses = TRUE, pointsize = 3, ellipse.level = 0.95,
mean.point = FALSE, ellipse.alpha = 0, repel = TRUE) +
scale_color_brewer(palette = "Set1") +
theme_minimal()
View(filtered_data)
